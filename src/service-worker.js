import { precacheAndRoute } from 'workbox-precaching';

// Precache assets generated by Vite
precacheAndRoute(self.__WB_MANIFEST);

// Custom caching rules
self.addEventListener('fetch', (event) => {
  if (
    event.request.url.endsWith('.wav') ||
    event.request.url.endsWith('.mp3') ||
    event.request.url.endsWith('.png') ||
    event.request.url.endsWith('.pdf')
  ) {
    event.respondWith(
      caches.match(event.request).then((response) => {
        return response || fetch(event.request);
      })
    );
  }
});

// Clear old caches on service worker activation
self.addEventListener('activate', (event) => {
  // List of caches to keep (include only the current cache name)
  const cacheWhitelist = self.__WB_MANIFEST.map(({ url }) => url);

  event.waitUntil(
    caches.keys().then((cacheNames) => {
      return Promise.all(
        cacheNames.map((cacheName) => {
          if (!cacheWhitelist.includes(cacheName)) {
            return caches.delete(cacheName);
          }
        })
      );
    })
  );
});